return function() {
  export function DashboardContent({ data }) { const styles = { container: { padding: '0 20px', marginBottom: '20px' }, grid: { display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))', gap: '20px' }, card: { backgroundColor: 'white', borderRadius: '4px', boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)', padding: '20px' }, cardTitle: { margin: '0 0 10px 0', color: '#333', fontSize: '18px' }, cardValue: { margin: 0, color: '#007bff', fontSize: '24px', fontWeight: 'bold' }, noData: { textAlign: 'center', color: '#666', padding: '40px 0' } }; if (!data || Object.keys(data).length === 0) { return React.createElement('div', { style: styles.container }, React.createElement('p', { style: styles.noData }, 'Нет данных для отображения') ); } const cards = Object.entries(data).map(([key, value]) => { return React.createElement('div', { key, style: styles.card }, React.createElement('h3', { style: styles.cardTitle }, key), React.createElement('p', { style: styles.cardValue }, value) ); }); return React.createElement('div', { style: styles.container }, React.createElement('div', { style: styles.grid }, cards) );
}
export function DashboardFooter({ onRefresh }) { const styles = { footer: { padding: '20px', backgroundColor: '#f5f5f5', borderTop: '1px solid #ddd', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }, refreshButton: { backgroundColor: '#007bff', color: 'white', border: 'none', borderRadius: '4px', padding: '8px 16px', cursor: 'pointer', fontSize: '14px' }, copyright: { margin: 0, color: '#666', fontSize: '14px' } }; const currentYear = new Date().getFullYear(); return React.createElement('footer', { style: styles.footer }, React.createElement('p', { style: styles.copyright }, `© ${currentYear} PopcornAI Console. Все права защищены.` ), React.createElement('button', { style: styles.refreshButton, onClick: onRefresh }, 'Обновить данные') );
}
export function DashboardHeader({ title }) { const styles = { header: { padding: '20px', backgroundColor: '#f5f5f5', borderBottom: '1px solid #ddd', marginBottom: '20px' }, title: { margin: 0, color: '#333', fontSize: '24px' } }; return React.createElement('header', { style: styles.header }, React.createElement('h1', { style: styles.title }, title) );
}
export function Dashboard() { const [dashboardData, setDashboardData] = React.useState(null); const [loading, setLoading] = React.useState(true); const [error, setError] = React.useState(null); React.useEffect(() => { async function fetchDashboardData() { try { setLoading(true); const response = await n8nFetch('dashboard/data'); const data = await response.json(); setDashboardData(data); setError(null); } catch (err) { console.error('Error fetching dashboard data:', err); setError('Не удалось загрузить данные дашборда'); setDashboardData(null); } finally { setLoading(false); } } fetchDashboardData(); }, []); const refreshData = React.useCallback(async () => { await fetchDashboardData(); }, []); if (loading) { return React.createElement('div', { className: 'dashboard-loading' }, React.createElement('p', null, 'Загрузка данных дашборда...') ); } if (error) { return React.createElement('div', { className: 'dashboard-error' }, React.createElement('p', null, `Ошибка: ${error}`), React.createElement('button', { onClick: refreshData }, 'Попробовать снова') ); } return React.createElement('div', { className: 'dashboard-container' }, React.createElement(DashboardHeader, { title: 'Панель управления' }), React.createElement(DashboardContent, { data: dashboardData }), React.createElement(DashboardFooter, { onRefresh: refreshData }) );
}
export default Dashboard;
}